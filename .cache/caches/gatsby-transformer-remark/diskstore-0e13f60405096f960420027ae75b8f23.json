{"expireTime":9007200864794755000,"key":"transformer-remark-markdown-html-ast-092ad2d630acd16b490a6365ff90147b--","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":" Project Rationale","position":{"start":{"line":1,"column":3,"offset":2},"end":{"line":1,"column":21,"offset":20}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":21,"offset":20}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This project idea came to possibly in my second year of university and so many things have got in the way that I kept on postponing it. Perhaps the ambition behind the idea was a bit too big to simply start working on it during my down time. Perhaps not. In essence, I am hoping to connect a microphone to an esp32 board, perhaps do a bit of pre-processing from the board and then send the data wirelessly. Once the data is in a bit of a more powerful machine, I will try to use more advanced filtering and algorithms to process the audio. If all goes well, I will try to use the final speech output as the input for a future NLP project (this would be separately implemented to avoid complications, and to enable me to work on different things concurrently). Sounds simple, right? Well, let's get working then!","position":{"start":{"line":3,"column":1,"offset":22},"end":{"line":3,"column":812,"offset":833}}}],"position":{"start":{"line":3,"column":1,"offset":22},"end":{"line":3,"column":812,"offset":833}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":" Development diaries","position":{"start":{"line":5,"column":3,"offset":837},"end":{"line":5,"column":23,"offset":857}}}],"position":{"start":{"line":5,"column":1,"offset":835},"end":{"line":5,"column":23,"offset":857}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":" Getting started","position":{"start":{"line":6,"column":4,"offset":861},"end":{"line":6,"column":20,"offset":877}}}],"position":{"start":{"line":6,"column":1,"offset":858},"end":{"line":6,"column":20,"offset":877}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The esp32 is setup and running. The instructions provided by Espressif are fairly simple to understand, and it helps that I'm not looking to do anything more complicated other than, program the esp32 using the command line tools on Mac OS.\nGetting the board to flash","position":{"start":{"line":8,"column":1,"offset":879},"end":{"line":9,"column":27,"offset":1145}}}],"position":{"start":{"line":8,"column":1,"offset":879},"end":{"line":9,"column":27,"offset":1145}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using a few of the examples from the esp-idf library, I was able to check that the development board I have from 3 years ago it's still functional! (I shouldn't really be surprised, but I have travelled with the box containing these components back and forth a few times now...).","position":{"start":{"line":11,"column":1,"offset":1147},"end":{"line":11,"column":280,"offset":1426}}}],"position":{"start":{"line":11,"column":1,"offset":1147},"end":{"line":11,"column":280,"offset":1426}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Getting a blink and digitalised voltage","position":{"start":{"line":13,"column":5,"offset":1432},"end":{"line":13,"column":44,"offset":1471}}}],"position":{"start":{"line":13,"column":1,"offset":1428},"end":{"line":13,"column":44,"offset":1471}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It's another day and a bit more of complexity creeping in slowly!","position":{"start":{"line":15,"column":1,"offset":1473},"end":{"line":15,"column":66,"offset":1538}}}],"position":{"start":{"line":15,"column":1,"offset":1473},"end":{"line":15,"column":66,"offset":1538}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I've implemented the classic LED circuit, once again just to check the I/O of the board is working well. For a few minutes, I got a bit frustrated as I remembered that my dev board has a very obscure pinout mapping (ie. it's not from an established manufacturer so I had no way to check which pins corresponded to the ESP32 module datasheet). However, thankfully, someone on the internet has the same module (it may not be that obscure after all), with the mapping for the pinout for this board, as well as some other handy info. Link is , in case anyone wants to see the board I've got. Although, I will always reference the pins used as per the official esp32 datasheet (e.g. GPIOXX, etc.).","position":{"start":{"line":17,"column":1,"offset":1540},"end":{"line":17,"column":693,"offset":2232}}}],"position":{"start":{"line":17,"column":1,"offset":1540},"end":{"line":17,"column":693,"offset":2232}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I've also managed to get the output from the microphone read by the board, and printed on the monitor in \"debugging style\". This feels like a tiny victory as yet again, I wasn't even sure if the microphone was going to be functional. However, on the other hand, now that I've got the microphone output's reading, I've got a big job ahead. In fact I've got two jobs that I could do in no different order:","position":{"start":{"line":19,"column":1,"offset":2234},"end":{"line":19,"column":404,"offset":2637}}}],"position":{"start":{"line":19,"column":1,"offset":2234},"end":{"line":19,"column":404,"offset":2637}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Sort out the microphone settings and ADC settings in the board. The voltage readings I'm getting are somewhat non-sense at the moment. And I know that regardless, it'll be a LONG way until the audio signal is all nice and pretty. So perhaps I may skip to my second job instead...\nSetup a WiFi connection and send the audio signal through this connection. This shouldn't be too hard, as I've done it before. And at least, once I've got the data on my laptop, it will be easier to evaluate the signal visually and what really needs to be done.\n"}],"position":{"start":{"line":21,"column":1,"offset":2639},"end":{"line":22,"column":266,"offset":3188}}}],"position":{"start":{"line":21,"column":1,"offset":2639},"end":{"line":22,"column":266,"offset":3188}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Ok, so next up! Establishing a WiFi connection between the board and my computer. One may ask why not use bluetooth low energy, for power saving reasons and because it is so widely used nowadays that you really feel like you're missing out if you're not using it. Well, my really ambitious plans for the project are to actually get the audio processed through cloud storage, most likely python scripts hosted in an instance of AWS. But this is very ambitious, and I might not get to this stage before I get distracted with a new idea.","position":{"start":{"line":24,"column":1,"offset":3190},"end":{"line":24,"column":535,"offset":3724}}}],"position":{"start":{"line":24,"column":1,"offset":3190},"end":{"line":24,"column":535,"offset":3724}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":" Communications via WiFi with ESP32","position":{"start":{"line":26,"column":4,"offset":3729},"end":{"line":26,"column":39,"offset":3764}}}],"position":{"start":{"line":26,"column":1,"offset":3726},"end":{"line":26,"column":39,"offset":3764}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The WiFi stack in the ESP32 and is fairly simple and well documented. The chip is able to act as a station (e.g. connecting to a home router) or to act as an access point (i.e. accepting connections from clients). It can also be set to a dual-mode, where it can handle both roles.","position":{"start":{"line":28,"column":1,"offset":3766},"end":{"line":28,"column":281,"offset":4046}}}],"position":{"start":{"line":28,"column":1,"offset":3766},"end":{"line":28,"column":281,"offset":4046}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In my case, I'm not looking to conenct the esp32 to a website to display the news, or the weather. And, for the time being, I'm also not looking to post new information in a dedicated website. Instead, I want to establish a WiFi connection so I can then communicate data packets from the esp32 to my computer. This involves the usage of a transmission protocol (TCP/IP or UDP/IP).","position":{"start":{"line":30,"column":1,"offset":4048},"end":{"line":30,"column":381,"offset":4428}}}],"position":{"start":{"line":30,"column":1,"offset":4048},"end":{"line":30,"column":381,"offset":4428}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The UDP protocol relies on a more asynchronous communication and for this reason this a higher probability of getting mixed up samples. This isn't the end of the world, and in fact I've worked on a wearable tech device that used UDP as the protocol, since this also provides less latency. I'll be trying the TCP/IP implemention using lwIP (lightweight IP) that is compatible with the ESP-IDF environment.\nClient and server roles","position":{"start":{"line":32,"column":1,"offset":4430},"end":{"line":33,"column":24,"offset":4858}}}],"position":{"start":{"line":32,"column":1,"offset":4430},"end":{"line":33,"column":24,"offset":4858}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The terminology for client and server is widely used around the Internet development sector. In the case of TCP/IP protocol, I'll be setting up the esp32 as the \"host\" that is providing information to the computer (which acts as the \"client\".).","position":{"start":{"line":35,"column":1,"offset":4860},"end":{"line":35,"column":245,"offset":5104}}}],"position":{"start":{"line":35,"column":1,"offset":4860},"end":{"line":35,"column":245,"offset":5104}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To setup my computer as a client, I have to run either a python script or a couple of netcat commands to tune in to the correct address and listen to the port.","position":{"start":{"line":37,"column":1,"offset":5106},"end":{"line":37,"column":160,"offset":5265}}}],"position":{"start":{"line":37,"column":1,"offset":5106},"end":{"line":37,"column":160,"offset":5265}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":38,"column":1,"offset":5266}}}}